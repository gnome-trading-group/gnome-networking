/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <sys/socket.h>

#include "jvm.h"
/* Header for class group_gnometrading_networking_sockets_NativeSocket */

#ifndef _Included_group_gnometrading_networking_sockets_NativeSocket
#define _Included_group_gnometrading_networking_sockets_NativeSocket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_init(JNIEnv *, jclass) {
    return;
}

/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    socket
 * Signature: (ZZ)I
 */
JNIEXPORT jint JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_socket(JNIEnv *env,
                                                               jobject cl,
                                                               jboolean stream,
                                                               jboolean reuse) {
    int fd;
    int type = (stream ? SOCK_STREAM : SOCK_DGRAM);
    int domain = (ipv6_available() && preferIPv6) ? AF_INET6 : AF_INET;
}

/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    connect0
 * Signature: (ILjava/net/InetAddress;I)I
 */
JNIEXPORT jint JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_connect0(JNIEnv *env,
                                                                 jobject cl,
                                                                 jint, jobject,
                                                                 jint) {
    int fd;

#ifdef AF_INET6
    if (ipv6_available())
        fd = socket(AF_INET6, (stream ? SOCK_STREAM : SOCK_DGRAM), 0);
    else
#endif /* AF_INET6 */
}

/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    close0
 * Signature: (I)V
 */
JNIEXPORT void JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_close0(JNIEnv *,
                                                               jobject, jint) {
    return;
}

/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    read0
 * Signature: (IJII)I
 */
JNIEXPORT jint JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_read0(JNIEnv *, jobject,
                                                              jint, jlong, jint,
                                                              jint) {
    return jint{0};
}

/*
 * Class:     group_gnometrading_networking_sockets_NativeSocket
 * Method:    write0
 * Signature: (IJII)I
 */
JNIEXPORT jint JNICALL
Java_group_gnometrading_networking_sockets_NativeSocket_write0(JNIEnv *,
                                                               jobject, jint,
                                                               jlong, jint,
                                                               jint) {
    return jint{0};
}

#ifdef __cplusplus
}
#endif
#endif
